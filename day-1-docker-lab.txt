Microsoft Windows [Version 10.0.22621.1105]
(c) Microsoft Corporation. All rights reserved.

C:\Windows\System32>choco install teraform
Chocolatey v1.2.1
Installing the following packages:
teraform
By installing, you accept licenses for the packages.
teraform not installed. The package was not found with the source(s) listed.
 Source(s): 'https://community.chocolatey.org/api/v2/'
 NOTE: When you specify explicit sources, it overrides default sources.
If the package version is a prerelease and you didn't specify `--pre`,
 the package may not be found.
Please see https://docs.chocolatey.org/en-us/troubleshooting for more
 assistance.

Chocolatey installed 0/1 packages. 1 packages failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Failures
 - teraform - teraform not installed. The package was not found with the source(s) listed.
 Source(s): 'https://community.chocolatey.org/api/v2/'
 NOTE: When you specify explicit sources, it overrides default sources.
If the package version is a prerelease and you didn't specify `--pre`,
 the package may not be found.
Please see https://docs.chocolatey.org/en-us/troubleshooting for more
 assistance.

C:\Windows\System32>choco install terraform
Chocolatey v1.2.1
Installing the following packages:
terraform
By installing, you accept licenses for the packages.
Progress: Downloading terraform 1.3.7... 100%

terraform v1.3.7 [Approved]
terraform package files install completed. Performing other installation steps.
The package terraform wants to run 'chocolateyInstall.ps1'.
Note: If you don't run this script, the installation will fail.
Note: To confirm automatically next time, use '-y' or consider:
choco feature enable -n allowGlobalConfirmation
Do you want to run the script?([Y]es/[A]ll - yes to all/[N]o/[P]rint): yes

Removing old terraform plugins
Downloading terraform 64 bit
  from 'https://releases.hashicorp.com/terraform/1.3.7/terraform_1.3.7_windows_amd64.zip'
Progress: 100% - Completed download of C:\Users\ashwi\AppData\Local\Temp\chocolatey\terraform\1.3.7\terraform_1.3.7_windows_amd64.zip (18.75 MB).
Download of terraform_1.3.7_windows_amd64.zip (18.75 MB) completed.
Hashes match.
Extracting C:\Users\ashwi\AppData\Local\Temp\chocolatey\terraform\1.3.7\terraform_1.3.7_windows_amd64.zip to C:\ProgramData\chocolatey\lib\terraform\tools...
C:\ProgramData\chocolatey\lib\terraform\tools
 ShimGen has successfully created a shim for terraform.exe
 The install of terraform was successful.
  Software installed to 'C:\ProgramData\chocolatey\lib\terraform\tools'

Chocolatey installed 1/1 packages.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).


C:\Windows\System32>terraform --v
Usage: terraform [global options] <subcommand> [args]

The available commands for execution are listed below.
The primary workflow commands are given first, followed by
less common or more advanced commands.

Main commands:
  init          Prepare your working directory for other commands
  validate      Check whether the configuration is valid
  plan          Show changes required by the current configuration
  apply         Create or update infrastructure
  destroy       Destroy previously-created infrastructure

All other commands:
  console       Try Terraform expressions at an interactive command prompt
  fmt           Reformat your configuration in the standard style
  force-unlock  Release a stuck lock on the current workspace
  get           Install or upgrade remote Terraform modules
  graph         Generate a Graphviz graph of the steps in an operation
  import        Associate existing infrastructure with a Terraform resource
  login         Obtain and save credentials for a remote host
  logout        Remove locally-stored credentials for a remote host
  output        Show output values from your root module
  providers     Show the providers required for this configuration
  refresh       Update the state to match remote systems
  show          Show the current state or a saved plan
  state         Advanced state management
  taint         Mark a resource instance as not fully functional
  test          Experimental support for module integration testing
  untaint       Remove the 'tainted' state from a resource instance
  version       Show the current Terraform version
  workspace     Workspace management

Global options (use these before the subcommand, if any):
  -chdir=DIR    Switch to a different working directory before executing the
                given subcommand.
  -help         Show this help output, or the help for a specified subcommand.
  -version      An alias for the "version" subcommand.


C:\Windows\System32>terraform --version
Terraform v1.3.7
on windows_amd64

C:\Windows\System32>bash

ashwi@HYPERLAPSE  /c/Windows/System32
$ cd ~

ashwi@HYPERLAPSE  ~
$ cd devops/

ashwi@HYPERLAPSE  ~/devops
$ ls
coding  provision  release

ashwi@HYPERLAPSE  ~/devops
$ cd provision/

ashwi@HYPERLAPSE  ~/devops/provision
$ ls
docker  kubernetes  vagrant

ashwi@HYPERLAPSE  ~/devops/provision
$ cd vagrant/

ashwi@HYPERLAPSE  ~/devops/provision/vagrant
$ ls
bionic  centos

ashwi@HYPERLAPSE  ~/devops/provision/vagrant
$ cd bionic/

ashwi@HYPERLAPSE  ~/devops/provision/vagrant/bionic
$ vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Checking if box 'hashicorp/bionic64' version '1.0.282' is up to date...
==> default: Clearing any previously set forwarded ports...
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
    default: The guest additions on this VM do not match the installed version of
    default: VirtualBox! In most cases this is fine, but in rare cases it can
    default: prevent things such as shared folders from working properly. If you see
    default: shared folder errors, please make sure the guest additions within the
    default: virtual machine match the version of VirtualBox you have installed on
    default: your host and reload your VM.
    default:
    default: Guest Additions Version: 6.0.10
    default: VirtualBox Version: 7.0
==> default: Mounting shared folders...
    default: /vagrant => C:/Users/ashwi/devops/provision/vagrant/bionic
==> default: Machine already provisioned. Run `vagrant provision` or use the `--provision`
==> default: flag to force provisioning. Provisioners marked to run always will still run.

ashwi@HYPERLAPSE  ~/devops/provision/vagrant/bionic
$ vagrant ssh
Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-58-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Tue Jan 31 18:00:40 UTC 2023

  System load:  0.0               Processes:           107
  Usage of /:   2.5% of 61.80GB   Users logged in:     1
  Memory usage: 2%                IP address for eth0: 10.0.2.15
  Swap usage:   0%

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge

0 packages can be updated.
0 updates are security updates.


Last login: Tue Jan 31 17:40:10 2023
vagrant@vagrant:~$ sudo su -

root@vagrant:~# cat /etc/*-release
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=18.04
DISTRIB_CODENAME=bionic
DISTRIB_DESCRIPTION="Ubuntu 18.04.3 LTS"
NAME="Ubuntu"
VERSION="18.04.3 LTS (Bionic Beaver)"
ID=ubuntu
ID_LIKE=debian
PRETTY_NAME="Ubuntu 18.04.3 LTS"
VERSION_ID="18.04"
HOME_URL="https://www.ubuntu.com/"
SUPPORT_URL="https://help.ubuntu.com/"
BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/"
PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"
VERSION_CODENAME=bionic
UBUNTU_CODENAME=bionic

root@vagrant:~# curl -fsSL https://test.docker.com -o test-docker.sh

root@vagrant:~# systemctl is-active docker
inactive

root@vagrant:~# apt install bridge-tools
Reading package lists... Done
Building dependency tree
Reading state information... Done
E: Unable to locate package bridge-tools

root@vagrant:~# apt install bridge-utils
Reading package lists... Done
Building dependency tree
Reading state information... Done
Suggested packages:
  ifupdown
The following NEW packages will be installed:
  bridge-utils
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 30.1 kB of archives.
After this operation, 102 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu bionic/main amd64 bridge-utils amd64 1.5-15ubuntu1 [30.1 kB]
Fetched 30.1 kB in 1s (42.5 kB/s)
Selecting previously unselected package bridge-utils.
(Reading database ... 42512 files and directories currently installed.)
Preparing to unpack .../bridge-utils_1.5-15ubuntu1_amd64.deb ...
Unpacking bridge-utils (1.5-15ubuntu1) ...
Setting up bridge-utils (1.5-15ubuntu1) ...
Processing triggers for man-db (2.8.3-2ubuntu0.1) ...
root@vagrant:~# brctl --help
Usage: brctl [commands]
commands:
        addbr           <bridge>                add bridge
        delbr           <bridge>                delete bridge
        addif           <bridge> <device>       add interface to bridge
        delif           <bridge> <device>       delete interface from bridge
        hairpin         <bridge> <port> {on|off}        turn hairpin on/off
        setageing       <bridge> <time>         set ageing time
        setbridgeprio   <bridge> <prio>         set bridge priority
        setfd           <bridge> <time>         set bridge forward delay
        sethello        <bridge> <time>         set hello time
        setmaxage       <bridge> <time>         set max message age
        setpathcost     <bridge> <port> <cost>  set path cost
        setportprio     <bridge> <port> <prio>  set port priority
        show            [ <bridge> ]            show a list of bridges
        showmacs        <bridge>                show a list of mac addrs
        showstp         <bridge>                show bridge stp info
        stp             <bridge> {on|off}       turn stp on/off
        
        
root@vagrant:~# brctl show
bridge name     bridge id               STP enabled     interfaces


root@vagrant:~# df -hT
Filesystem                   Type      Size  Used Avail Use% Mounted on
udev                         devtmpfs  2.6G     0  2.6G   0% /dev
tmpfs                        tmpfs     526M  5.2M  521M   1% /run
/dev/mapper/vagrant--vg-root ext4       62G  1.6G   58G   3% /
tmpfs                        tmpfs     2.6G     0  2.6G   0% /dev/shm
tmpfs                        tmpfs     5.0M     0  5.0M   0% /run/lock
tmpfs                        tmpfs     2.6G     0  2.6G   0% /sys/fs/cgroup
vagrant                      vboxsf    476G  170G  307G  36% /vagrant
tmpfs                        tmpfs     526M     0  526M   0% /run/user/1000


root@vagrant:~# ls /var/lib/docker
ls: cannot access '/var/lib/docker': No such file or directory


root@vagrant:~# sh test-docker.sh
# Executing docker install script, commit: 1d97565eca92bb523082b7d4f530c74104e05d35
+ sh -c apt-get update -qq >/dev/null
+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sh -c mkdir -p /etc/apt/keyrings && chmod -R 0755 /etc/apt/keyrings
+ sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg
+ sh -c chmod a+r /etc/apt/keyrings/docker.gpg
+ sh -c echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu bionic test" > /etc/apt/sources.list.d/docker.list
+ sh -c apt-get update -qq >/dev/null
+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-scan-plugin docker-buildx-plugin >/dev/null
+ version_gte 20.10
+ [ -z  ]
+ return 0
+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null
+ sh -c docker version
Client: Docker Engine - Community
 Version:           23.0.0-rc.3
 API version:       1.42
 Go version:        go1.19.5
 Git commit:        e1152b2
 Built:             Fri Jan 20 17:57:36 2023
 OS/Arch:           linux/amd64
 Context:           default

Server: Docker Engine - Community
 Engine:
  Version:          23.0.0-rc.3
  API version:      1.42 (minimum version 1.12)
  Go version:       go1.19.5
  Git commit:       9f62b37
  Built:            Fri Jan 20 17:57:36 2023
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          1.6.16
  GitCommit:        31aa4358a36870b21a992d3ad2bef29e1d693bec
 runc:
  Version:          1.1.4
  GitCommit:        v1.1.4-0-g5fd4c4d
 docker-init:
  Version:          0.19.0
  GitCommit:        de40ad0

================================================================================

To run Docker as a non-privileged user, consider setting up the
Docker daemon in rootless mode for your user:

    dockerd-rootless-setuptool.sh install

Visit https://docs.docker.com/go/rootless/ to learn about rootless mode.


To run the Docker daemon as a fully privileged service, but granting non-root
users access, refer to https://docs.docker.com/go/daemon-access/

WARNING: Access to the remote API on a privileged Docker daemon is equivalent
         to root access on the host. Refer to the 'Docker daemon attack surface'
         documentation for details: https://docs.docker.com/go/attack-surface/

================================================================================


root@vagrant:~# apt update
Hit:1 https://download.docker.com/linux/ubuntu bionic InRelease
Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease
Hit:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease
Hit:4 http://security.ubuntu.com/ubuntu bionic-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease
Reading package lists... Done
Building dependency tree
Reading state information... Done
270 packages can be upgraded. Run 'apt list --upgradable' to see them.


root@vagrant:~# cat /etc/apt/sources.list
#

# deb cdrom:[Ubuntu-Server 18.04.3 LTS _Bionic Beaver_ - Release amd64 (20190805)]/ bionic main restricted

#deb cdrom:[Ubuntu-Server 18.04.3 LTS _Bionic Beaver_ - Release amd64 (20190805)]/ bionic main restricted

# See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to
# newer versions of the distribution.
deb http://archive.ubuntu.com/ubuntu/ bionic main restricted
# deb-src http://archive.ubuntu.com/ubuntu/ bionic main restricted

## Major bug fix updates produced after the final release of the
## distribution.
deb http://archive.ubuntu.com/ubuntu/ bionic-updates main restricted
# deb-src http://archive.ubuntu.com/ubuntu/ bionic-updates main restricted

## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu
## team. Also, please note that software in universe WILL NOT receive any
## review or updates from the Ubuntu security team.
deb http://archive.ubuntu.com/ubuntu/ bionic universe
# deb-src http://archive.ubuntu.com/ubuntu/ bionic universe
deb http://archive.ubuntu.com/ubuntu/ bionic-updates universe
# deb-src http://archive.ubuntu.com/ubuntu/ bionic-updates universe

## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu
## team, and may not be under a free licence. Please satisfy yourself as to
## your rights to use the software. Also, please note that software in
## multiverse WILL NOT receive any review or updates from the Ubuntu
## security team.
deb http://archive.ubuntu.com/ubuntu/ bionic multiverse
# deb-src http://archive.ubuntu.com/ubuntu/ bionic multiverse
deb http://archive.ubuntu.com/ubuntu/ bionic-updates multiverse
# deb-src http://archive.ubuntu.com/ubuntu/ bionic-updates multiverse

## N.B. software from this repository may not have been tested as
## extensively as that contained in the main release, although it includes
## newer versions of some applications which may provide useful features.
## Also, please note that software in backports WILL NOT receive any review
## or updates from the Ubuntu security team.
deb http://archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse
# deb-src http://archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse

## Uncomment the following two lines to add software from Canonical's
## 'partner' repository.
## This software is not part of Ubuntu, but is offered by Canonical and the
## respective vendors as a service to Ubuntu users.
# deb http://archive.canonical.com/ubuntu bionic partner
# deb-src http://archive.canonical.com/ubuntu bionic partner

deb http://security.ubuntu.com/ubuntu bionic-security main restricted
# deb-src http://security.ubuntu.com/ubuntu bionic-security main restricted
deb http://security.ubuntu.com/ubuntu bionic-security universe
# deb-src http://security.ubuntu.com/ubuntu bionic-security universe
deb http://security.ubuntu.com/ubuntu bionic-security multiverse
# deb-src http://security.ubuntu.com/ubuntu bionic-security multiverse

root@vagrant:~# apt-get update -qq

root@vagrant:~# apt-get update

Hit:1 https://download.docker.com/linux/ubuntu bionic InRelease
Hit:2 http://security.ubuntu.com/ubuntu bionic-security InRelease
Hit:3 http://archive.ubuntu.com/ubuntu bionic InRelease
Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease
Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease
Reading package lists... Done


root@vagrant:~# apt update
Hit:1 https://download.docker.com/linux/ubuntu bionic InRelease
Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease
Hit:3 http://security.ubuntu.com/ubuntu bionic-security InRelease
Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease
Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease
Reading package lists... Done
Building dependency tree
Reading state information... Done
270 packages can be upgraded. Run 'apt list --upgradable' to see them.


root@vagrant:~# ls /dev
autofs           ecryptfs   log           memory_bandwidth    rtc       tty1   tty21  tty33  tty45  tty57      ttyS1   ttyS21  ttyS5       vcs1   vfio
block            fb0        loop0         mqueue              rtc0      tty10  tty22  tty34  tty46  tty58      ttyS10  ttyS22  ttyS6       vcs2   vga_arbiter
bsg              fd         loop1         net                 sda       tty11  tty23  tty35  tty47  tty59      ttyS11  ttyS23  ttyS7       vcs3   vhci
btrfs-control    full       loop2         network_latency     sda1      tty12  tty24  tty36  tty48  tty6       ttyS12  ttyS24  ttyS8       vcs4   vhost-net
char             fuse       loop3         network_throughput  sg0       tty13  tty25  tty37  tty49  tty60      ttyS13  ttyS25  ttyS9       vcs5   vhost-vsock
console          hpet       loop4         null                shm       tty14  tty26  tty38  tty5   tty61      ttyS14  ttyS26  uhid        vcs6   zero
core             hugepages  loop5         port                snapshot  tty15  tty27  tty39  tty50  tty62      ttyS15  ttyS27  uinput      vcsa
cpu_dma_latency  hwrng      loop6         ppp                 snd       tty16  tty28  tty4   tty51  tty63      ttyS16  ttyS28  urandom     vcsa1
cuse             i2c-0      loop7         psaux               stderr    tty17  tty29  tty40  tty52  tty7       ttyS17  ttyS29  userio      vcsa2
disk             initctl    loop-control  ptmx                stdin     tty18  tty3   tty41  tty53  tty8       ttyS18  ttyS3   vagrant-vg  vcsa3
dm-0             input      mapper        pts                 stdout    tty19  tty30  tty42  tty54  tty9       ttyS19  ttyS30  vboxguest   vcsa4
dm-1             kmsg       mcelog        random              tty       tty2   tty31  tty43  tty55  ttyprintk  ttyS2   ttyS31  vboxuser    vcsa5
dri              lightnvm   mem           rfkill              tty0      tty20  tty32  tty44  tty56  ttyS0      ttyS20  ttyS4   vcs         vcsa6


root@vagrant:~# stat /dev/null
  File: /dev/null
  Size: 0               Blocks: 0          IO Block: 4096   character special file
Device: 6h/6d   Inode: 6           Links: 1     Device type: 1,3
Access: (0666/crw-rw-rw-)  Uid: (    0/    root)   Gid: (    0/    root)
Access: 2023-01-31 17:39:46.064000000 +0000
Modify: 2023-01-31 17:39:46.064000000 +0000
Change: 2023-01-31 17:39:46.064000000 +0000
 Birth: -
 
root@vagrant:~# history
    1  cat /etc/*-release
    2  curl -fsSL https://test.docker.com -o test-docker.sh
    3  systemctl is-active docker
    4  apt install bridge-tools
    5  apt install bridge-utils
    6  brctl --help
    7  brctl show
    8  df -hT
    9  ls /var/lib/docker
   10  sh test-docker.sh
   11  apt update
   12  cat /etc/apt/sources.list
   13  apt-get update -qq
   14  apt-get update
   15  apt update
   16  ls /dev
   17  stat /dev/null
   18  history
   
   
root@vagrant:~# systemctl is-active docker
active
root@vagrant:~# systemctl status docker
● docker.service - Docker Application Container Engine
   Loaded: loaded (/lib/systemd/system/docker.service; enabled; vendor preset: enabled)
   Active: active (running) since Tue 2023-01-31 18:15:16 UTC; 1h 38min ago
     Docs: https://docs.docker.com
 Main PID: 21250 (dockerd)
    Tasks: 9
   CGroup: /system.slice/docker.service
           └─21250 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock

Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.243041419Z" level=info msg="[core] [Channel #4] Channel Connectivity change to READY" module
Jan 31 18:15:15 vagrant dockerd[21250]: time="2023-01-31T18:15:15.600720423Z" level=info msg="Loading containers: start."
Jan 31 18:15:15 vagrant dockerd[21250]: time="2023-01-31T18:15:15.932664820Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.187952986Z" level=info msg="Loading containers: done."
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.239813968Z" level=warning msg="WARNING: No swap limit support"
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.240107008Z" level=info msg="Docker daemon" commit=9f62b37 graphdriver=overlay2 version=23.0.
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.240269190Z" level=info msg="Daemon has completed initialization"
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.299776605Z" level=info msg="[core] [Server #7] Server created" module=grpc
Jan 31 18:15:16 vagrant systemd[1]: Started Docker Application Container Engine.
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.310489009Z" level=info msg="API listen on /run/docker.sock"


root@vagrant:~# systemctl status docker.service
● docker.service - Docker Application Container Engine
   Loaded: loaded (/lib/systemd/system/docker.service; enabled; vendor preset: enabled)
   Active: active (running) since Tue 2023-01-31 18:15:16 UTC; 1h 39min ago
     Docs: https://docs.docker.com
 Main PID: 21250 (dockerd)
    Tasks: 9
   CGroup: /system.slice/docker.service
           └─21250 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock

Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.243041419Z" level=info msg="[core] [Channel #4] Channel Connectivity change to READY" module
Jan 31 18:15:15 vagrant dockerd[21250]: time="2023-01-31T18:15:15.600720423Z" level=info msg="Loading containers: start."
Jan 31 18:15:15 vagrant dockerd[21250]: time="2023-01-31T18:15:15.932664820Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.187952986Z" level=info msg="Loading containers: done."
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.239813968Z" level=warning msg="WARNING: No swap limit support"
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.240107008Z" level=info msg="Docker daemon" commit=9f62b37 graphdriver=overlay2 version=23.0.
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.240269190Z" level=info msg="Daemon has completed initialization"
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.299776605Z" level=info msg="[core] [Server #7] Server created" module=grpc
Jan 31 18:15:16 vagrant systemd[1]: Started Docker Application Container Engine.
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.310489009Z" level=info msg="API listen on /run/docker.sock"
root@vagrant:~#
root@vagrant:~#


root@vagrant:~# journelctl -xu docker
-su: journelctl: command not found


root@vagrant:~# journalctl -xu docker
-- Logs begin at Mon 2023-01-30 19:00:57 UTC, end at Tue 2023-01-31 19:17:01 UTC. --
Jan 31 18:15:14 vagrant systemd[1]: Starting Docker Application Container Engine...
-- Subject: Unit docker.service has begun start-up
-- Defined-By: systemd
-- Support: http://www.ubuntu.com/support
--
-- Unit docker.service has begun starting up.
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.186159496Z" level=info msg="Starting up"
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.189548746Z" level=info msg="detected 127.0.0.53 nameserver, assuming systemd-resolved, so us
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.231071464Z" level=info msg="[core] [Channel #1] Channel created" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.231358746Z" level=info msg="[core] [Channel #1] original dial target is: \"unix:///run/conta
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.231823916Z" level=info msg="[core] [Channel #1] parsed dial target is: {Scheme:unix Authorit
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.232242533Z" level=info msg="[core] [Channel #1] Channel authority set to \"localhost\"" modu
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.232340260Z" level=info msg="[core] [Channel #1] Resolver state updated: {\n  \"Addresses\":
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.232645373Z" level=info msg="[core] [Channel #1] Channel switches to new LB policy \"pick_fir
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.233076285Z" level=info msg="[core] [Channel #1 SubChannel #2] Subchannel created" module=grp
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.233376861Z" level=info msg="[core] [Channel #1 SubChannel #2] Subchannel Connectivity change
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.233710765Z" level=info msg="[core] [Channel #1 SubChannel #2] Subchannel picks a new address
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.234336722Z" level=info msg="[core] [Channel #1] Channel Connectivity change to CONNECTING" m
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.235407426Z" level=info msg="[core] [Channel #1 SubChannel #2] Subchannel Connectivity change
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.235477465Z" level=info msg="[core] [Channel #1] Channel Connectivity change to READY" module
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.239261414Z" level=info msg="[core] [Channel #4] Channel created" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.239470255Z" level=info msg="[core] [Channel #4] original dial target is: \"unix:///run/conta
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.239709658Z" level=info msg="[core] [Channel #4] parsed dial target is: {Scheme:unix Authorit
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.239790136Z" level=info msg="[core] [Channel #4] Channel authority set to \"localhost\"" modu
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.239966584Z" level=info msg="[core] [Channel #4] Resolver state updated: {\n  \"Addresses\":
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.240363608Z" level=info msg="[core] [Channel #4] Channel switches to new LB policy \"pick_fir
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.240549208Z" level=info msg="[core] [Channel #4 SubChannel #5] Subchannel created" module=grp
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.240799245Z" level=info msg="[core] [Channel #4 SubChannel #5] Subchannel Connectivity change
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.241006072Z" level=info msg="[core] [Channel #4 SubChannel #5] Subchannel picks a new address
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.241995602Z" level=info msg="[core] [Channel #4 SubChannel #5] Subchannel Connectivity change
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.240980162Z" level=info msg="[core] [Channel #4] Channel Connectivity change to CONNECTING" m
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.243041419Z" level=info msg="[core] [Channel #4] Channel Connectivity change to READY" module
Jan 31 18:15:15 vagrant dockerd[21250]: time="2023-01-31T18:15:15.600720423Z" level=info msg="Loading containers: start."
Jan 31 18:15:15 vagrant dockerd[21250]: time="2023-01-31T18:15:15.932664820Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.187952986Z" level=info msg="Loading containers: done."
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.239813968Z" level=warning msg="WARNING: No swap limit support"
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.240107008Z" level=info msg="Docker daemon" commit=9f62b37 graphdriver=overlay2 version=23.0.
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.240269190Z" level=info msg="Daemon has completed initialization"
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.299776605Z" level=info msg="[core] [Server #7] Server created" module=grpc
Jan 31 18:15:16 vagrant systemd[1]: Started Docker Application Container Engine.
-- Subject: Unit docker.service has finished start-up
-- Defined-By: systemd
-- Support: http://www.ubuntu.com/support
--
-- Unit docker.service has finished starting up.
--
-- The start-up result is RESULT.
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.310489009Z" level=info msg="API listen on /run/docker.sock"


root@vagrant:~# tail -n 50 /var/log/syslog
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.231358746Z" level=info msg="[core] [Channel #1] original dial target is: \"unix:///run/containerd/containerd.sock\"" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.231823916Z" level=info msg="[core] [Channel #1] parsed dial target is: {Scheme:unix Authority: Endpoint:run/containerd/containerd.sock URL:{Scheme:unix Opaque: User: Host: Path:/run/containerd/containerd.sock RawPath: OmitHost:false ForceQuery:false RawQuery: Fragment: RawFragment:}}" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.232242533Z" level=info msg="[core] [Channel #1] Channel authority set to \"localhost\"" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.232340260Z" level=info msg="[core] [Channel #1] Resolver state updated: {\n  \"Addresses\": [\n    {\n      \"Addr\": \"/run/containerd/containerd.sock\",\n      \"ServerName\": \"\",\n      \"Attributes\": {},\n      \"BalancerAttributes\": null,\n      \"Type\": 0,\n      \"Metadata\": null\n    }\n  ],\n  \"ServiceConfig\": null,\n  \"Attributes\": null\n} (resolver returned new addresses)" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.232645373Z" level=info msg="[core] [Channel #1] Channel switches to new LB policy \"pick_first\"" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.233076285Z" level=info msg="[core] [Channel #1 SubChannel #2] Subchannel created" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.233376861Z" level=info msg="[core] [Channel #1 SubChannel #2] Subchannel Connectivity change to CONNECTING" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.233710765Z" level=info msg="[core] [Channel #1 SubChannel #2] Subchannel picks a new address \"/run/containerd/containerd.sock\" to connect" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.234336722Z" level=info msg="[core] [Channel #1] Channel Connectivity change to CONNECTING" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.235407426Z" level=info msg="[core] [Channel #1 SubChannel #2] Subchannel Connectivity change to READY" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.235477465Z" level=info msg="[core] [Channel #1] Channel Connectivity change to READY" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.239261414Z" level=info msg="[core] [Channel #4] Channel created" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.239470255Z" level=info msg="[core] [Channel #4] original dial target is: \"unix:///run/containerd/containerd.sock\"" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.239709658Z" level=info msg="[core] [Channel #4] parsed dial target is: {Scheme:unix Authority: Endpoint:run/containerd/containerd.sock URL:{Scheme:unix Opaque: User: Host: Path:/run/containerd/containerd.sock RawPath: OmitHost:false ForceQuery:false RawQuery: Fragment: RawFragment:}}" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.239790136Z" level=info msg="[core] [Channel #4] Channel authority set to \"localhost\"" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.239966584Z" level=info msg="[core] [Channel #4] Resolver state updated: {\n  \"Addresses\": [\n    {\n      \"Addr\": \"/run/containerd/containerd.sock\",\n      \"ServerName\": \"\",\n      \"Attributes\": {},\n      \"BalancerAttributes\": null,\n      \"Type\": 0,\n      \"Metadata\": null\n    }\n  ],\n  \"ServiceConfig\": null,\n  \"Attributes\": null\n} (resolver returned new addresses)" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.240363608Z" level=info msg="[core] [Channel #4] Channel switches to new LB policy \"pick_first\"" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.240549208Z" level=info msg="[core] [Channel #4 SubChannel #5] Subchannel created" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.240799245Z" level=info msg="[core] [Channel #4 SubChannel #5] Subchannel Connectivity change to CONNECTING" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.241006072Z" level=info msg="[core] [Channel #4 SubChannel #5] Subchannel picks a new address \"/run/containerd/containerd.sock\" to connect" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.241995602Z" level=info msg="[core] [Channel #4 SubChannel #5] Subchannel Connectivity change to READY" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.240980162Z" level=info msg="[core] [Channel #4] Channel Connectivity change to CONNECTING" module=grpc
Jan 31 18:15:14 vagrant dockerd[21250]: time="2023-01-31T18:15:14.243041419Z" level=info msg="[core] [Channel #4] Channel Connectivity change to READY" module=grpc
Jan 31 18:15:15 vagrant dockerd[21250]: time="2023-01-31T18:15:15.600720423Z" level=info msg="Loading containers: start."
Jan 31 18:15:15 vagrant kernel: [ 2392.933579] Bridge firewalling registered
Jan 31 18:15:15 vagrant kernel: [ 2393.033946] nf_conntrack version 0.5.0 (65536 buckets, 262144 max)
Jan 31 18:15:15 vagrant kernel: [ 2393.245348] Initializing XFRM netlink socket
Jan 31 18:15:15 vagrant kernel: [ 2393.253166] Netfilter messages via NETLINK v0.30.
Jan 31 18:15:15 vagrant dockerd[21250]: time="2023-01-31T18:15:15.932664820Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address"
Jan 31 18:15:15 vagrant kernel: [ 2393.257412] ctnetlink v0.93: registering with nfnetlink.
Jan 31 18:15:15 vagrant systemd-udevd[21346]: link_config: autonegotiation is unset or enabled, the speed and duplex are not writable.
Jan 31 18:15:15 vagrant networkd-dispatcher[676]: WARNING:Unknown index 3 seen, reloading interface list
Jan 31 18:15:16 vagrant kernel: [ 2393.480442] IPv6: ADDRCONF(NETDEV_UP): docker0: link is not ready
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.187952986Z" level=info msg="Loading containers: done."
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.239813968Z" level=warning msg="WARNING: No swap limit support"
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.240107008Z" level=info msg="Docker daemon" commit=9f62b37 graphdriver=overlay2 version=23.0.0-rc.3
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.240269190Z" level=info msg="Daemon has completed initialization"
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.299776605Z" level=info msg="[core] [Server #7] Server created" module=grpc
Jan 31 18:15:16 vagrant systemd[1]: Started Docker Application Container Engine.
Jan 31 18:15:16 vagrant dockerd[21250]: time="2023-01-31T18:15:16.310489009Z" level=info msg="API listen on /run/docker.sock"
Jan 31 18:15:16 vagrant systemd[1]: Reloading.
Jan 31 18:15:24 vagrant systemd[1]: message repeated 3 times: [ Reloading.]
Jan 31 18:15:24 vagrant dbus-daemon[682]: [system] Reloaded configuration
Jan 31 18:15:24 vagrant systemd[1]: Stopped target Sockets.
Jan 31 18:15:24 vagrant systemd[1]: Stopping Sockets.
Jan 31 18:15:24 vagrant systemd[1]: Reached target Sockets.
Jan 31 18:17:01 vagrant systemd-udevd[461]: Network interface NamePolicy= disabled on kernel command line, ignoring.
Jan 31 18:17:01 vagrant CRON[22106]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)
Jan 31 18:31:15 vagrant systemd-resolved[533]: Server returned error NXDOMAIN, mitigating potential DNS violation DVE-2018-0001, retrying transaction with reduced feature level UDP.
Jan 31 19:17:01 vagrant CRON[23236]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)
root@vagrant:~#
root@vagrant:~#

root@vagrant:~# systemctl deamon-reload
Unknown operation deamon-reload.
root@vagrant:~# systemctl reload-deamon
Unknown operation reload-deamon.

root@vagrant:~#
root@vagrant:~#
root@vagrant:~# systemctl daemon-reload
root@vagrant:~#
root@vagrant:~#
root@vagrant:~# vim /lib/systemd/system/docker.service
root@vagrant:~#
root@vagrant:~#
root@vagrant:~# vim /lib/systemd/system/docker.service
root@vagrant:~#
root@vagrant:~#
root@vagrant:~# history
    1  cat /etc/*-release
    2  curl -fsSL https://test.docker.com -o test-docker.sh
    3  systemctl is-active docker
    4  apt install bridge-tools
    5  apt install bridge-utils
    6  brctl --help
    7  brctl show
    8  df -hT
    9  ls /var/lib/docker
   10  sh test-docker.sh
   11  apt update
   12  cat /etc/apt/sources.list
   13  apt-get update -qq
   14  apt-get update
   15  apt update
   16  ls /dev
   17  stat /dev/null
   18  history
   19  systemctl is-active docker
   20  systemctl status docker
   21  systemctl status docker.service
   22  journelctl -xu docker
   23  journalctl -xu docker
   24  tail -n 50 /var/log/syslog
   25  systemctl deamon-reload
   26  systemctl reload-deamon
   27  systemctl daemon-reload
   28  vim /lib/systemd/system/docker.service
   29  history
root@vagrant:~#
root@vagrant:~#

root@vagrant:~# brctl show
bridge name     bridge id               STP enabled     interfaces
docker0         8000.02423fa69f26       no


root@vagrant:~#
root@vagrant:~#


root@vagrant:~# ifconfig docker0
docker0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        inet 172.17.0.1  netmask 255.255.0.0  broadcast 172.17.255.255
        ether 02:42:3f:a6:9f:26  txqueuelen 0  (Ethernet)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

root@vagrant:~#
root@vagrant:~#
root@vagrant:~# ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 08:00:27:bb:14:75 brd ff:ff:ff:ff:ff:ff
    inet 10.0.2.15/24 brd 10.0.2.255 scope global dynamic eth0
       valid_lft 77331sec preferred_lft 77331sec
    inet6 fe80::a00:27ff:febb:1475/64 scope link
       valid_lft forever preferred_lft forever
3: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group default
    link/ether 02:42:3f:a6:9f:26 brd ff:ff:ff:ff:ff:ff
    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0
       valid_lft forever preferred_lft forever
root@vagrant:~#
root@vagrant:~#
root@vagrant:~# man bridge
root@vagrant:~#
root@vagrant:~#
root@vagrant:~# bridge --help
Usage: bridge [ OPTIONS ] OBJECT { COMMAND | help }
       bridge [ -force ] -batch filename
where   OBJECT := { link | fdb | mdb | vlan | monitor }
        OPTIONS := { -V[ersion] | -s[tatistics] | -d[etails] |
                     -o[neline] | -t[imestamp] | -n[etns] name |
                     -c[ompressvlans] -j{son} }
root@vagrant:~#
root@vagrant:~#
root@vagrant:~# man bridge
root@vagrant:~#
root@vagrant:~#

root@vagrant:~# ls /var/lib/docker
buildkit  containers  engine-id  image  network  overlay2  plugins  runtimes  swarm  tmp  volumes

root@vagrant:~#
root@vagrant:~#


root@vagrant:~# docker system info
Client:
 Context:    default
 Debug Mode: false
 Plugins:
  buildx: Docker Buildx (Docker Inc.)
    Version:  v0.10.0-rc2
    Path:     /usr/libexec/docker/cli-plugins/docker-buildx
  compose: Docker Compose (Docker Inc.)
    Version:  v2.15.1
    Path:     /usr/libexec/docker/cli-plugins/docker-compose
  scan: Docker Scan (Docker Inc.)
    Version:  v0.23.0
    Path:     /usr/libexec/docker/cli-plugins/docker-scan

Server:
 Containers: 0
  Running: 0
  Paused: 0
  Stopped: 0
 Images: 0
 Server Version: 23.0.0-rc.3
 Storage Driver: overlay2
  Backing Filesystem: extfs
  Supports d_type: true
  Using metacopy: false
  Native Overlay Diff: true
  userxattr: false
 Logging Driver: json-file
 Cgroup Driver: cgroupfs
 Cgroup Version: 1
 Plugins:
  Volume: local
  Network: bridge host ipvlan macvlan null overlay
  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog
 Swarm: inactive
 Runtimes: io.containerd.runc.v2 runc
 Default Runtime: runc
 Init Binary: docker-init
 containerd version: 31aa4358a36870b21a992d3ad2bef29e1d693bec
 runc version: v1.1.4-0-g5fd4c4d
 init version: de40ad0
 Security Options:
  apparmor
  seccomp
   Profile: builtin
 Kernel Version: 4.15.0-58-generic
 Operating System: Ubuntu 18.04.3 LTS
 OSType: linux
 Architecture: x86_64
 CPUs: 3
 Total Memory: 5.13GiB
 Name: vagrant
 ID: 9f5c1195-f526-4e18-93b9-d4c5702bc679
 Docker Root Dir: /var/lib/docker
 Debug Mode: false
 Registry: https://index.docker.io/v1/
 Experimental: false
 Insecure Registries:
  127.0.0.0/8
 Live Restore Enabled: false

WARNING: No swap limit support
root@vagrant:~#
root@vagrant:~#


root@vagrant:~# docker pull ubuntu
Using default tag: latest
latest: Pulling from library/ubuntu
677076032cca: Pull complete
Digest: sha256:f05532b6a1dec5f7a77a8d684af87bc9cd1f2b32eab301c109f8ad151b5565d1
Status: Downloaded newer image for ubuntu:latest
docker.io/library/ubuntu:latest


root@vagrant:~#
root@vagrant:~#
root@vagrant:~# docker image inspect ubuntu
[
    {
        "Id": "sha256:58db3edaf2be6e80f628796355b1bdeaf8bea1692b402f48b7e7b8d1ff100b02",
        "RepoTags": [
            "ubuntu:latest"
        ],
        "RepoDigests": [
            "ubuntu@sha256:f05532b6a1dec5f7a77a8d684af87bc9cd1f2b32eab301c109f8ad151b5565d1"
        ],
        "Parent": "",
        "Comment": "",
        "Created": "2023-01-26T04:58:02.385638665Z",
        "Container": "6be7983e643200aa82c27e883bf03ae871243571f93a39f39d11dd3c79c96611",
        "ContainerConfig": {
            "Hostname": "6be7983e6432",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "Tty": false,
            "OpenStdin": false,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            ],
            "Cmd": [
                "/bin/sh",
                "-c",
                "#(nop) ",
                "CMD [\"/bin/bash\"]"
            ],
            "Image": "sha256:269190441c1f8398e85a287ba6ac5568574f55bfcae7fb99bd253afad8cd8e69",
            "Volumes": null,
            "WorkingDir": "",
            "Entrypoint": null,
            "OnBuild": null,
            "Labels": {
                "org.opencontainers.image.ref.name": "ubuntu",
                "org.opencontainers.image.version": "22.04"
            }
        },
        "DockerVersion": "20.10.12",
        "Author": "",
        "Config": {
            "Hostname": "",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "Tty": false,
            "OpenStdin": false,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            ],
            "Cmd": [
                "/bin/bash"
            ],
            "Image": "sha256:269190441c1f8398e85a287ba6ac5568574f55bfcae7fb99bd253afad8cd8e69",
            "Volumes": null,
            "WorkingDir": "",
            "Entrypoint": null,
            "OnBuild": null,
            "Labels": {
                "org.opencontainers.image.ref.name": "ubuntu",
                "org.opencontainers.image.version": "22.04"
            }
        },
        "Architecture": "amd64",
        "Os": "linux",
        "Size": 77805310,
        "VirtualSize": 77805310,
        "GraphDriver": {
            "Data": {
                "MergedDir": "/var/lib/docker/overlay2/4133fcc881106b18d68b6a2552b85981d6fabb30cf8c9b3a6119eb65d9f5b2f6/merged",
                "UpperDir": "/var/lib/docker/overlay2/4133fcc881106b18d68b6a2552b85981d6fabb30cf8c9b3a6119eb65d9f5b2f6/diff",
                "WorkDir": "/var/lib/docker/overlay2/4133fcc881106b18d68b6a2552b85981d6fabb30cf8c9b3a6119eb65d9f5b2f6/work"
            },
            "Name": "overlay2"
        },
        "RootFS": {
            "Type": "layers",
            "Layers": [
                "sha256:c5ff2d88f67954bdcf1cfdd46fe3d683858d69c2cadd6660812edfc83726c654"
            ]
        },
        "Metadata": {
            "LastTagTime": "0001-01-01T00:00:00Z"
        }
    }
]


root@vagrant:~# exit
logout
vagrant@vagrant:~$ exit
logout
Connection to 127.0.0.1 closed.

ashwi@HYPERLAPSE  ~/devops/provision/vagrant/bionic
$ vagrant halt
==> default: Attempting graceful shutdown of VM...

ashwi@HYPERLAPSE  ~/devops/provision/vagrant/bionic
$ vagrant status
Current machine states:

default                   poweroff (virtualbox)

The VM is powered off. To restart the VM, simply run `vagrant up`

ashwi@HYPERLAPSE  ~/devops/provision/vagrant/bionic
$ pwd
/c/Users/ashwi/devops/provision/vagrant/bionic

ashwi@HYPERLAPSE  ~/devops/provision/vagrant/bionic
$
