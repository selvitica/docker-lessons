#lauch cmd in administrative mode and switch to bash and execute the below in steps.

cd ~
mkdir devops
cd devops
mkdir provision release coding
cd release
mkdir git gitlab jenkins tomcat nagios
cd ..
cd coding
mkdir puppet chef ansible terraform
cd puppet
mkdir puppetserver puppetnode
cd ..
cd chef
mkdir chefserver chefworkstation chefnode
cd ..
cd ..
cd provision
mkdir vagrant docker kubernetes
cd vagrant
mkdir centos bionic
cd centos
vagrant init centos/7
vagrant up && vagrant halt
cd ../bionic
vagrant init hasicorp/bionic64
vagrant up && vagrant halt
echo "Lab Setup Complete"


C:\Windows\System32>choco install teraform
Chocolatey v1.2.1
Installing the following packages:
teraform
By installing, you accept licenses for the packages.
teraform not installed. The package was not found with the source(s) listed.
 Source(s): 'https://community.chocolatey.org/api/v2/'
 NOTE: When you specify explicit sources, it overrides default sources.
If the package version is a prerelease and you didn't specify `--pre`,
 the package may not be found.
Please see https://docs.chocolatey.org/en-us/troubleshooting for more
 assistance.

Chocolatey installed 0/1 packages. 1 packages failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Failures
 - teraform - teraform not installed. The package was not found with the source(s) listed.
 Source(s): 'https://community.chocolatey.org/api/v2/'
 NOTE: When you specify explicit sources, it overrides default sources.
If the package version is a prerelease and you didn't specify `--pre`,
 the package may not be found.
Please see https://docs.chocolatey.org/en-us/troubleshooting for more
 assistance.

C:\Windows\System32>choco install terraform
Chocolatey v1.2.1
Installing the following packages:
terraform
By installing, you accept licenses for the packages.
Progress: Downloading terraform 1.3.7... 100%

terraform v1.3.7 [Approved]
terraform package files install completed. Performing other installation steps.
The package terraform wants to run 'chocolateyInstall.ps1'.
Note: If you don't run this script, the installation will fail.
Note: To confirm automatically next time, use '-y' or consider:
choco feature enable -n allowGlobalConfirmation
Do you want to run the script?([Y]es/[A]ll - yes to all/[N]o/[P]rint): yes

Removing old terraform plugins
Downloading terraform 64 bit
  from 'https://releases.hashicorp.com/terraform/1.3.7/terraform_1.3.7_windows_amd64.zip'
Progress: 100% - Completed download of C:\Users\ashwi\AppData\Local\Temp\chocolatey\terraform\1.3.7\terraform_1.3.7_windows_amd64.zip (18.75 MB).
Download of terraform_1.3.7_windows_amd64.zip (18.75 MB) completed.
Hashes match.
Extracting C:\Users\ashwi\AppData\Local\Temp\chocolatey\terraform\1.3.7\terraform_1.3.7_windows_amd64.zip to C:\ProgramData\chocolatey\lib\terraform\tools...
C:\ProgramData\chocolatey\lib\terraform\tools
 ShimGen has successfully created a shim for terraform.exe
 The install of terraform was successful.
  Software installed to 'C:\ProgramData\chocolatey\lib\terraform\tools'

Chocolatey installed 1/1 packages.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).


C:\Windows\System32>terraform --v
Usage: terraform [global options] <subcommand> [args]

The available commands for execution are listed below.
The primary workflow commands are given first, followed by
less common or more advanced commands.

Main commands:
  init          Prepare your working directory for other commands
  validate      Check whether the configuration is valid
  plan          Show changes required by the current configuration
  apply         Create or update infrastructure
  destroy       Destroy previously-created infrastructure

All other commands:
  console       Try Terraform expressions at an interactive command prompt
  fmt           Reformat your configuration in the standard style
  force-unlock  Release a stuck lock on the current workspace
  get           Install or upgrade remote Terraform modules
  graph         Generate a Graphviz graph of the steps in an operation
  import        Associate existing infrastructure with a Terraform resource
  login         Obtain and save credentials for a remote host
  logout        Remove locally-stored credentials for a remote host
  output        Show output values from your root module
  providers     Show the providers required for this configuration
  refresh       Update the state to match remote systems
  show          Show the current state or a saved plan
  state         Advanced state management
  taint         Mark a resource instance as not fully functional
  test          Experimental support for module integration testing
  untaint       Remove the 'tainted' state from a resource instance
  version       Show the current Terraform version
  workspace     Workspace management

Global options (use these before the subcommand, if any):
  -chdir=DIR    Switch to a different working directory before executing the
                given subcommand.
  -help         Show this help output, or the help for a specified subcommand.
  -version      An alias for the "version" subcommand.


C:\Windows\System32>terraform --version
Terraform v1.3.7
on windows_amd64
